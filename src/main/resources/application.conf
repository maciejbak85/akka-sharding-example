http {
  port = 9000
  port = ${?HTTP_PORT}
}

akka {
  actor {
    provider = "cluster"
    serializers {
      kryo = "com.twitter.chill.akka.AkkaSerializer"
    }
    serialization-bindings {
      "io.baku.jobsorter.PackIt" = kryo
      "io.baku.jobsorter.Packed" = kryo
    }
    deployment {
      /packBoss {
        router = round-robin-pool
        nr-of-instances = 12
      }
    }
  }
  remote {
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = ${clustering.ip}
      port = ${clustering.port}
    }
  }

  cluster {
    seed-nodes = [
      "akka.tcp://"${clustering.cluster.name}"@"${clustering.seed-ip}":"${clustering.seed-port}
    ]

    # auto downing is NOT safe for production deployments.
    # you may want to use it during development, read more about it in the docs.
    #
    # auto-down-unreachable-after = 10s

    role {
      #worker.min-nr-of-members = 2
      #work_producer.min-nr-of-members = 1
    }

    #roles = [${clustering.cluster.roles}]

    singleton {
      # The actor name of the child singleton actor.
      singleton-name = "singleton"

      # Singleton among the nodes tagged with specified role.
      # If the role is not specified it's a singleton among all nodes in the cluster.
      role = ""

      # When a node is becoming oldest it sends hand-over request to previous oldest,
      # that might be leaving the cluster. This is retried with this interval until
      # the previous oldest confirms that the hand over has started or the previous
      # oldest member is removed from the cluster (+ akka.cluster.down-removal-margin).
      hand-over-retry-interval = 1s

      # The number of retries are derived from hand-over-retry-interval and
      # akka.cluster.down-removal-margin (or ClusterSingletonManagerSettings.removalMargin),
      # but it will never be less than this property.
      min-number-of-hand-over-retries = 10
    }

    singleton-proxy {
      # The actor name of the singleton actor that is started by the ClusterSingletonManager
      singleton-name = ${akka.cluster.singleton.singleton-name}

      # The role of the cluster nodes where the singleton can be deployed.
      # If the role is not specified then any node will do.
      role = ""

      # Interval at which the proxy will try to resolve the singleton instance.
      singleton-identification-interval = 1s

      # If the location of the singleton is unknown the proxy will buffer this
      # number of messages and deliver them when the singleton is identified.
      # When the buffer is full old messages will be dropped when new messages are
      # sent via the proxy.
      # Use 0 to disable buffering, i.e. messages will be dropped immediately if
      # the location of the singleton is unknown.
      # Maximum allowed buffer size is 10000.
      buffer-size = 1000
    }
  }
}

# Disable legacy metrics in akka-cluster.
akka.cluster.metrics.enabled=off

#
# Enable metrics extension in akka-cluster-metrics.
akka.extensions=["akka.cluster.metrics.ClusterMetricsExtension"]

# Sigar native library extract location during tests.
# Note: use per-jvm-instance folder when running multiple jvm on one host.
akka.cluster.metrics.native-library-extract-folder=${user.dir}/target/native

clustering {
  ip = "127.0.0.1"
  ip = ${?CLUSTER_IP}
  port = 1600
  port = ${?CLUSTER_PORT}
  seed-ip = "127.0.0.1"
  seed-ip = ${?CLUSTER_IP}
  seed-ip = ${?SEED_PORT_1600_TCP_ADDR}
  seed-port = 1600
  seed-port = ${?SEED_PORT_1600_TCP_PORT}
  cluster.name = zyztem
}